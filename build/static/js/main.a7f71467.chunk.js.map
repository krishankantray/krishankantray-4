{"version":3,"sources":["posts sync /^/.*$","blog/CodeHighlight.js","redux/constants/actionType.js","redux/reducers/index.js","redux/reducers/switchTheme.reducer.js","layout/DrawerContent.js","redux/actions/switchTheme.action.js","layout/NavItems.js","layout/Navbar.js","theme/dark.js","theme/normal.js","blog/BlogBrief.js","blog/blogsData.js","blog/index.js","blog/FullBlogs.js","App.js","reportWebVitals.js","index.js","posts/bluestack-assignment.js","posts/hackerrank-0.js","blog/VideoPlayer.js","posts/csv-to-sql-import.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","CodeHighLight","props","className","language","showLineNumbers","lineNumber","customStyle","minWidth","boxShadow","style","anOldHope","lineNumberStyle","color","textAlign","background","marginLeft","paddingRight","DARK_THEME","NORMAL_THEME","combineReducers","switchTheme","action","type","useStyles","makeStyles","theme","toolbar","mixins","DrawerContent","classes","Divider","List","ListItem","button","ListItemIcon","class","ListItemText","primary","themeType","ThemeChanger","dispatch","useDispatch","siteTheme","useSelector","state","IconButton","onClick","NavItems","exact","to","root","display","appBar","width","height","breakpoints","up","menuButton","marginRight","spacing","navItems","down","drawerPaper","ResponsiveDrawer","window","useTheme","React","useState","mobileOpen","setMobileOpen","handleDrawerToggle","container","undefined","document","body","CssBaseline","AppBar","position","Toolbar","aria-label","edge","Hidden","smUp","implementation","Drawer","variant","anchor","direction","open","onClose","paper","ModalProps","keepMounted","palette","marginTop","maxWidth","ImgMediaCard","Card","CardActionArea","CardMedia","component","alt","image","data","CardContent","Typography","gutterBottom","title","desc","date","CardActions","pathname","Button","size","blogData","filename","tot","length","Blog","page","setPage","slice","process","d","Pagination","count","Math","ceil","onChange","event","value","console","log","FullBlogs","useLocation","Post","require","default","Paper","elevation","App","createMuiTheme","dark","setTheme","useEffect","normal","ThemeProvider","path","Navbar","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","rootReducer","ReactDOM","render","StrictMode","getElementById","src","href","VideoPlayer","url","CodeHighlight","Alert","severity","AlertTitle","icon"],"mappings":"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","file":"static/js/main.a7f71467.chunk.js","sourcesContent":["var map = {\n\t\"./bluestack-assignment\": 73,\n\t\"./bluestack-assignment.js\": 73,\n\t\"./csv-to-sql-import\": 82,\n\t\"./csv-to-sql-import.js\": 82,\n\t\"./hackerrank-0\": 80,\n\t\"./hackerrank-0.js\": 80\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 116;","import React from 'react';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport {anOldHope} from 'react-syntax-highlighter/dist/esm/styles/hljs' ;\nimport '../styles/blog.css';\n\nexport default function CodeHighLight(props) {\n    return (\n        <div className=\"code-container\">\n            <SyntaxHighlighter \n                language={props.language} \n                showLineNumbers={props.lineNumber} \n                customStyle={{minWidth: \"100%\", boxShadow: '0px 2px 4px rgba(50,50,93,.1)'}} \n                style={anOldHope}\n                lineNumberStyle={{\n                    color: '#F7DC6F',\n                    textAlign: 'right',\n                    background: '#2C3E50',\n                    marginLeft: '-0.5em',\n                    paddingRight: '0.2em'\n                 }}\n            >\n                {props.code}\n            </SyntaxHighlighter>\n        </div>\n    )\n}\n","export const DARK_THEME = 'DARK_THEME' ;\r\nexport const NORMAL_THEME = 'NORMAL_THEME' ;\r\n","import { combineReducers } from 'redux' ;\r\nimport switchTheme from './switchTheme.reducer' ;\r\n\r\nexport default combineReducers({\r\n  switchTheme\r\n})","import {DARK_THEME, NORMAL_THEME} from '../constants/actionType' ; \r\n\r\nconst theme = 'dark' ;\r\nexport default function switchTheme(state=theme, action) {\r\n    switch (action.type){\r\n        case DARK_THEME : \r\n            return 'dark'\r\n        case NORMAL_THEME :\r\n            return 'normal'\r\n        default :\r\n            return 'dark'        \r\n    }\r\n}","import {React } from 'react' ;\r\nimport Divider from '@material-ui/core/Divider';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    // necessary for content to be below app bar\r\n    toolbar: theme.mixins.toolbar,\r\n  }));\r\n\r\nexport default function DrawerContent() { \r\n  const classes = useStyles();\r\n\r\n    return (\r\n    <div>\r\n      <div className={classes.toolbar} />\r\n      <Divider />\r\n      <List>\r\n        <ListItem button key={'blog'}>\r\n          <ListItemIcon> <i class=\"fas fa-book fa-lg\" color=\"#5D6D7E\"></i> </ListItemIcon>\r\n          <ListItemText primary={'Blog'} />\r\n        </ListItem>\r\n        <ListItem button key={'Resume'}>\r\n          <ListItemIcon> <i class=\"fas fa-file-alt fa-lg\" color=\"#5D6D7E\"></i> </ListItemIcon>\r\n          <ListItemText primary={'Resume'} />\r\n        </ListItem>\r\n        <ListItem button key={'project'}>\r\n          <ListItemIcon> <i class=\"fas fa-tools fa-lg\" color=\"#5D6D7E\" ></i> </ListItemIcon>\r\n          <ListItemText primary={'Projects'} />\r\n        </ListItem>\r\n        <ListItem button key={'contact'}>\r\n          <ListItemIcon> <i class=\"fas fa-address-book fa-lg\" color=\"#5D6D7E\"></i> </ListItemIcon>\r\n          <ListItemText primary={'Contact'} />\r\n        </ListItem>\r\n      </List>\r\n    </div>\r\n   );\r\n}  ","import {DARK_THEME, NORMAL_THEME} from '../constants/actionType' ;\r\n\r\nexport function switchTheme(themeType){\r\n    if(themeType === 'dark'){\r\n        return {type: DARK_THEME}\r\n    }\r\n    else if(themeType === 'normal'){\r\n        return {type: NORMAL_THEME}\r\n    }\r\n}","import {React} from 'react' ;\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { Link } from \"react-router-dom\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport {switchTheme} from '../redux/actions/switchTheme.action' ;\r\nimport '../styles/navItems.css' ;\r\n\r\nexport function ThemeChanger(props) {\r\n    const dispatch = useDispatch() ; \r\n    const siteTheme = useSelector(state => state.switchTheme);\r\n    return(\r\n        <div className=\"theme-changer\">\r\n            <IconButton onClick={()=> siteTheme==='dark' ? dispatch(switchTheme('normal')) : dispatch(switchTheme('dark')) }>\r\n                <i class=\"fas fa-sun\" color=\"#D4AC0D\"></i>\r\n            </IconButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function NavItems(props) {\r\n    return(\r\n        <div className=\"nav-items\">\r\n            <ul>\r\n                <li><Link exact to=\"/\" className=\"nav-link\">Blog</Link></li>\r\n                <li><Link exact to=\"/resume\" className=\"nav-link\">Resume</Link></li>\r\n                <li><Link exact to=\"/projects\" className=\"nav-link\">Projects</Link></li>\r\n                <li><Link exact to=\"/contact\" className=\"nav-link\">Contact</Link></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport DrawerContent from './DrawerContent' ;\r\nimport {NavItems, ThemeChanger} from './NavItems' ;\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    display: 'flex',\r\n    width: '100%',\r\n    height: \"60px\",\r\n    [theme.breakpoints.up('sm')]: {\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  navItems: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      display: 'none',\r\n    }\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth\r\n  },\r\n\r\n}));\r\n\r\nfunction ResponsiveDrawer(props) {\r\n  const { window } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n\r\n  const container = window !== undefined ? () => window().document.body : undefined;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar} color='paper'>\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <div className=\"caption-header\">\r\n            Krishankant Ray\r\n          </div>\r\n          <div className={classes.navItems}>\r\n            <NavItems />\r\n          </div>\r\n          <ThemeChanger />\r\n        </Toolbar>\r\n      </AppBar>\r\n      <nav aria-label=\"mailbox folders\">\r\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            container={container}\r\n            variant=\"temporary\"\r\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n          >\r\n            <DrawerContent />\r\n          </Drawer>\r\n        </Hidden>\r\n        \r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResponsiveDrawer;\r\n","const theme = {\r\n    \"palette\": {\r\n        \"common\": { \"black\": \"rgba(0, 0, 0, 1)\", \"white\": \"#fff\" },\r\n        \"background\": {\r\n        \"paper\": \"rgba(52, 73, 94, 1)\",\r\n        \"default\": \"rgba(40, 55, 71, 1)\"\r\n        },\r\n        \"primary\": {\r\n        \"light\": \"rgba(5, 126, 147, 1)\",\r\n        \"main\": \"rgba(4, 104, 122, 1)\",\r\n        \"dark\": \"rgba(3, 62, 73, 1)\",\r\n        \"contrastText\": \"#fff\"\r\n        },\r\n        \"secondary\": {\r\n        \"light\": \"rgba(0, 213, 230, 1)\",\r\n        \"main\": \"rgba(1, 176, 190, 1)\",\r\n        \"dark\": \"rgba(48, 139, 146, 1)\",\r\n        \"contrastText\": \"#fff\"\r\n        },\r\n        \"error\": {\r\n        \"light\": \"#e57373\",\r\n        \"main\": \"#f44336\",\r\n        \"dark\": \"#d32f2f\",\r\n        \"contrastText\": \"#fff\"\r\n        },\r\n        \"text\": {\r\n        \"primary\": \"rgba(178, 186, 187, 1)\",\r\n        \"secondary\": \"rgba(0, 0, 0, 0.54)\",\r\n        \"disabled\": \"rgba(0, 0, 0, 0.38)\",\r\n        \"hint\": \"rgba(0, 0, 0, 0.38)\"\r\n        }\r\n    },\r\n    \"typography\": {\r\n        \"fontFamily\": \"Varela Round\"\r\n    }\r\n} ;\r\n\r\n\r\nexport default theme","const theme = {\r\n  palette: {\r\n    type:'light'\r\n  }\r\n} ;\r\n\r\nexport default theme","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Link} from 'react-router-dom' ;\r\nimport '../styles/blog.css' ;\r\nconst useStyles = makeStyles((theme)=>({\r\n  root: {\r\n    marginLeft:'auto',\r\n    marginRight:'auto',\r\n    marginTop : '40px',\r\n    maxWidth: '55%',\r\n    [theme.breakpoints.down('sm')]: {\r\n      maxWidth: '95%'\r\n    }\r\n  },\r\n}));\r\n\r\nexport default function ImgMediaCard(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          component=\"img\"\r\n          alt=\"Contemplative Reptile\"\r\n          height=\"auto\"\r\n          image={props.data.image}\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {props.data.title}\r\n          </Typography>\r\n          <Typography variant=\"body2\" component=\"p\">\r\n            {props.data.desc}\r\n          </Typography>\r\n          <Typography variant=\"caption\" color=\"secondary\" component=\"p\">\r\n            {props.data.date}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Link to={{pathname: \"/read-blog\", state:{data: props.data}}} className=\"link\">\r\n          <Button size=\"large\" color=\"secondary\">\r\n            Read More ....\r\n          </Button>\r\n        </Link>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","const blogData = [\n    {\n        id:0,\n        filename: \"bluestack-assignment.js\",\n        component:\"img\",\n        alt:\"bluestack assignment\",\n        height:\"350\",\n        image: (process.env.REACT_APP_ENV === \"local\" ? process.env.REACT_APP_LOCAL_URL : process.env.REACT_APP_PROD_URL ) + \"images/interview-question.PNG\",\n        title:\"Frontend Developer Interview Assignment\",\n        date: \"14 April 2020\",\n        desc : \"just a interview experience.....\"\n    },\n    {\n        id:1,\n        filename: \"csv-to-sql-import.js\",\n        component:\"img\",\n        alt:\"csv to sql export\",\n        height:\"350\",\n        image: (process.env.REACT_APP_ENV === \"local\" ? process.env.REACT_APP_LOCAL_URL : process.env.REACT_APP_PROD_URL ) + \"images/csv-to-sql.jpg\",\n        title:\"CSV to SQL import\",\n        date: \"30 April 2020\",\n        desc : \"this is a simple utility to import csv file to mysql databse.....\"\n    },\n    {\n        id:2,\n        filename: \"hackerrank-0.js\",\n        component:\"img\",\n        alt:\"hackerrank\",\n        height:\"350\",\n        image: (process.env.REACT_APP_ENV === \"local\" ? process.env.REACT_APP_LOCAL_URL : process.env.REACT_APP_PROD_URL ) + \"images/hackerrank-fair-caker-cutting.jpg\",\n        title:\"HackerRank- Fair Cake Cutting\",\n        date: \"08 August 2017\",\n        desc : \"a problem solving question.....\"\n    }\n];\n\nexport default blogData;\n","import React, {useState} from 'react' ;\r\nimport BlogBrief from './BlogBrief' ;\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport '../styles/blog.css' ;\r\nimport blogData from './blogsData' ;\r\nlet n=process.env.REACT_APP_BLOG_LIST_SIZE;\r\nlet tot = blogData.length ;\r\nconsole.log(tot) ;\r\nexport default function Blog(){\r\n    const [page, setPage] = useState(1);\r\n    const handlePage = (event, value)=>{\r\n        setPage(value); \r\n    }\r\n    return (\r\n    <div className=\"blog-list\">\r\n        <div className=\"blogs-list-title\">Blogs</div>\r\n        {blogData.slice(n*(page-1), n*page).map(d=><BlogBrief data={d}/>)}\r\n        <Pagination count={Math.ceil(tot/n)} page={page} color=\"primary\" className=\"pagination\" onChange={handlePage} />\r\n    </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport {useLocation, Link} from 'react-router-dom' ;\nimport Paper from '@material-ui/core/Paper';\nimport \"../styles/blog.css\" ;\n\nexport default function FullBlogs(){\n    let location = useLocation();\n    let data = location.state.data; \n    let Post = require('../posts/'+data.filename).default;\n    return(\n        <div  className=\"blog-container\">\n            <div className=\"back-button\">\n                <Link to=\"/\" className=\"link\">\n                    <i class=\"fas fa-arrow-alt-circle-left fa-3x\" color=\"rgba(4, 104, 122, 1)\"></i>\n                </Link>\n            </div>\n            <Paper className=\"paper-container\" elevation={3}>\n                <Post />\n            </Paper>\n        </div>\n    )\n}\n","import {useEffect, useState} from 'react';\nimport {useSelector} from 'react-redux';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { CssBaseline } from '@material-ui/core';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport Navbar from './layout/Navbar' ; \nimport dark from './theme/dark';\nimport normal from './theme/normal';\nimport './App.css' ;\nimport Blog from './blog/index';\nimport FullBlog from './blog/FullBlogs' ;\n\nfunction App() {\n  const siteTheme = useSelector(state => state.switchTheme);\n  const [theme, setTheme] = useState(createMuiTheme(dark)) ;\n  useEffect(()=>{\n    setTheme( siteTheme === 'dark' ? createMuiTheme(dark) : createMuiTheme(normal) ) ;\n  },[siteTheme])\n  \n  return (\n    <Router>\n      <div style={{display:'flex'}}>\n        <ThemeProvider theme={theme}>\n          <CssBaseline />\n          <Switch>\n            <Route exact path='/' >\n              <Blog />\n            </Route>\n            <Route exact path='/read-blog'>\n              <FullBlog />\n            </Route>\n          </Switch>\n          <Navbar/>\n        </ThemeProvider>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport rootReducer from \"./redux/reducers/index\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React from 'react' ;\nimport {useLocation} from 'react-router-dom' ;\nimport CodeHighlight from '../blog/CodeHighlight';\nimport \"../styles/blog.css\";\n\nexport default function Post(props) {\n    let location = useLocation();\n    let data = location.state.data;\n\n    return (\n        <div>\n            <div className=\"title\">{data.title}</div>\n            <div className=\"subtitle\">{data.date}</div>\n            <div className=\"image-container\">\n                <img src={data.image} className=\"image\"/>\n            </div>\n            <div class=\"blog-body\">\n                <p className=\"text-1\">\n                    Problem Desciption\n                </p>\n                <p className=\"text-2\">\n                    Implement a web page, which contains 3 tabs (Upcoming Campaigns, Live Campaign, Past campaigns) as defined in the following mockup.\n                </p>\n\n                <div className=\"para-separator\">\n                    <img className=\"image\" src={(process.env.REACT_APP_ENV === \"local\" ? process.env.REACT_APP_LOCAL_URL : process.env.REACT_APP_PROD_URL ) + \"images/bluestack.png\"} />\n                </div>\n\n                <div className=\"list-container\">\n                    <ul>\n                        <li>Each tab should show relevant data based on the status of campaign (upcoming, live, past).</li>\n                        <li>The very first column should show the time diff from today to that campaign's date. (You can consider any date. If the date is in the future, you can show the number of days in the future. For example, \"23 days ahead\")</li>\n                        <li>Add functionality to reschedule a campaign by opening a calendar on clicking the Schedule again icon. (Whatever date you select, should be shown in the first column named \"Date\". The time diff shown against it should also be updated).</li>\n                        <li>Once the date is changed of campaign. The campaign should move to the relevant Tab (Upcoming,Live,Past) , based on the date selected.</li>\n                        <li>Clicking on View Pricing in the row should show a modal with relevant information of the campaign. See the design in the Specs section below</li>\n                        <li><b>Entire UI should be responsive.. </b> Please use your judgement on how it should look on mobile devices</li>\n                        <li>UI should be same regarding color schemes and layout, button states etc. The assets are provided in the Specs section</li>\n                        <li>Please use dummy json to populate the table. For reference you can see the Need Help? section below</li>\n                        <li>You should use a modern frontend framework like ReactJS, AngularJS, VueJS etc to implement this.</li>\n                        <li>It should support basic localization of strings in 2 languages. There should be a button to select between different languages. (Optional bonus point)</li>\n                    </ul>\n                </div>    \n\n                <div className=\"para-separator\">\n                    <p className=\"text-1\">\n                        Deliverables\n                    </p>\n                    <b>Once you are done, please share with us:</b>\n                </div>\n                <div className=\"list-container\">\n                    <ul>\n                        <li>Source code link (GitHub, BitBucket, etc)</li>\n                        <li>URL where you have deployed the project. You need to deploy the WebApp on some cloud platform and provide us the URL for the same. <span className=\"highlighted-text\">This step is very important</span> </li>\n                        <li>Share the testcases for how you will test this Webpage in following format</li>\n                    </ul>\n                </div>\n\n                <div className=\"para-separator\">\n                <table class=\"styled-table\">\n                    <thead>\n                        <tr>\n                            <th>Desciption</th>\n                            <th>Execution steps\t</th>\n                            <th>Expected output</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>Localization</td>\n                            <td>Select German language from Language selector dropdown\t</td>\n                            <td>Header data,x days ago,x days ahead,Tabs text should be shown in german</td>\n\n                        </tr>\n                        <tr>\n                            <td>Campaign Date change</td>\n                            <td>Select today's date in Past Campaign tab for any campaign</td>\n                            <td>The campaign should be removed from Past campaign tab and appear in Live Campaign tab</td>\n                        </tr>\n                    </tbody> \n                </table>       \n                </div>\n                \n                <div className=\"para-separator\">\n                    <div className=\"list-container\">\n                        <ul>\n                            <li>Modularize your code well. Putting everything in one file is not good.</li>\n                            <li>Use external DB/cache if required. Storing on local files and local variables is not desirable.</li>\n                            <li>Put proper comments in code , so that we can understand the function usage etc..</li>\n                        </ul>\n                    </div>\n                </div>\n                \n                <div className=\"para-separator\">\n                    <p className=\"text-1\">\n                        Specs\n                    </p>\n                    <div className=\"list-container\">\n                        <ul>\n                            <li>UI Design specs. <a className=\"link\" href=\"https://www.figma.com/file/RVDVlcKRF1gRGX7jUiu820/Front-End?node-id=0%3A1\">Click Here</a></li>\n                            <li>Assets <a className=\"link\" href=\"http://cdn3.bluestacks.com/Interviews/Front-end/Front-End.zip\">Click Here</a></li>\n                        </ul>\n                    </div>\n                </div>\n\n                <div className=\"para-separator\">\n                    <p className=\"text-1\">\n                        Need Help?\n                    </p>\n                    <p>Sample json to render the data</p>\n                    <CodeHighlight language=\"json\" code={`{\n  \"data\": [{\n      \"name\": \"Test Whatsapp\",\n      \"region\": \"US\",\n      \"createdOn\": 1559807714999,\n      \"price\": \"Price info of Test Whatsapp\",\n      \"csv\": \"Some CSV link for Whatsapp\",\n      \"report\": \"Some report link for Whatsapp\",\n      \"image_url\":\"Some image url of the campaign\" \n    },\n    {\n      \"name\": \"Super Jewels Quest\",\n      \"region\": \"CA, FR\",\n      \"createdOn\": 1559806715124,\n      \"price\": \"Price info of Super Jewels Quest\",\n      \"csv\": \"Some CSV link for Super Jewels Quest\",\n      \"report\": \"Some report link for Super Jewels Ques\",\n      \"image_url\":\"Some image url of the campaign\"\n    },\n    {\n      \"name\": \"Mole Slayer\",\n      \"region\": \"FR\",\n      \"createdOn\": 1559806711124,\n      \"price\": \"Price info of Mole Slayer\",\n      \"csv\": \"Some CSV link for Mole Slayer\",\n      \"report\": \"Some report link for Mole Slayer\",\n      \"image_url\":\"Some image url of the campaign\"\n    },\n    {\n      \"name\": \"Mancala Mix\",\n      \"region\": \"JP\",\n      \"createdOn\": 1559806680124,\n      \"price\": \"Price info of Mancala Mix\",\n      \"csv\": \"Some CSV link for Mancala Mix\",\n      \"report\": \"Some report link for Mancala Mix\",\n      \"image_url\":\"Some image url of the campaign\"\n    }\n  ]\n}`} />\n                    <div className=\"list-container\">\n                        <ul>\n                            <li>How to create Repo in GitHub? <a className=\"link\" href=\"https://guides.github.com/activities/hello-world/\">Click Here</a></li>\n                            <li>How to host your WebApp online? <a className=\"link\" href=\"https://gist.github.com/TylerFisher/6127328\">Click Here</a> or <a className=\"link\" href=\"https://pages.github.com/\">Click Here</a></li>\n                        </ul>\n                    </div>\n                </div>\n\n                \n            </div>    \n        </div>\n    )\n}","import React from 'react' ;\nimport {useLocation} from 'react-router-dom' ;\nimport CodeHighlight from '../blog/CodeHighlight';\nimport \"../styles/blog.css\";\n\nexport default function Post(props) {\n    let location = useLocation();\n    let data = location.state.data;\n\n    return (\n        <div>\n            <div className=\"title\">{data.title}</div>\n            <div className=\"subtitle\">{data.date}</div>\n            <div className=\"image-container\">\n                <img src={data.image} className=\"image\"/>\n            </div>\n            <div class=\"blog-body\">\n                <p className=\"text-1\">\n                    Problem: ( Fair Cake Cutting )\n                </p>\n                <p className=\"text-2\">\n                    Leha is a young man from Belarus. He loves cakes really much. In Leha's country, cakes are always evenly divided between people.\n                    Leha wants to know how many people he should invite to his party if he has a cake whose size is equal to units and he wants each person to get exactly units of cake. Note that Leha doesn't take a piece for himself; in other words, the cake is only divided among the people he invited to the party.\n                </p>\n\n                <div className=\"para-separator\">\n                    <p className=\"text-1\">\n                        Input Format\n                    </p>\n                    <p className=\"text-2\">\n                        The first line contains three space-separated integers describing the respective values of , , and .\n                    </p>\n                </div>\n\n                <div className=\"para-separator\">\n                    <p className=\"text-1\">\n                        Constraints\n                    </p>\n                    <p className=\"text-2\">\n                        It is guaranteed that the answer is an integer.\n                    </p>\n                </div>    \n\n                <div className=\"para-separator\">\n                    <p className=\"text-1\">\n                        Output Format\n                    </p>\n                    <p className=\"text-2\">\n                        Print a single integer denoting , the number of people he should invite to his party.\n                    </p>\n                </div>\n\n                <div className=\"para-separator\">\n                    <p className=\"text-1\">\n                        Sample Input 0\n                    </p>\n                    <CodeHighlight language=\"bash\" code={`5 10 1`} />\n                </div>\n                \n                <div className=\"para-separator\">\n                    <p className=\"text-1\">\n                        Sample Output 0\n                    </p>\n                    <CodeHighlight language=\"bash\" code={`2`} />\n                </div>\n\n                <div className=\"para-separator\">\n                    <p className=\"text-1\">\n                        Explanation 0\n                    </p>\n                    <p className=\"text-2\">\n                        In this sample case, , and . Leha wants each person to get units of cake. He has a cake whose size is unit, so if he invites people and the cake is distributed evenly among them, each person gets units of cake. Therefore, the answer is b=2 .\n                    </p>\n                </div>\n\n                <div className=\"para-separator\">\n                    <p className=\"text-1\">\n                        Sample Output 0\n                    </p>\n                    <CodeHighlight lineNumber={false} language=\"cpp\" code={`   #include <cmath>  \n    #include <cstdio>  \n    #include <vector>  \n    #include <iostream>  \n    #include <algorithm>  \n    using namespace std;  \n\n\n    int main() {  \n        unsigned long int A,B,a,x;  \n        double p;  \n        cin>>A>>B>>a;  \n        p=((B*a)/A);  \n        \n        x= floor(p);  \n        cout<<x;  \n        return 0;  \n    }`} />\n                </div>\n            </div>    \n        </div>\n    )\n}","import React from 'react' ;\nimport ReactPlayer from 'react-player/youtube'\nimport \"../styles/blog.css\" ;\nexport default function VideoPlayer(props) {\n    return (\n        <div className=\"video-container\">\n            <ReactPlayer url={props.url} />        \n        </div>\n    )\n}\n","import React from 'react';\nimport {useLocation} from 'react-router-dom' ;\nimport CodeHighlight from '../blog/CodeHighlight';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport Divider from '@material-ui/core/Divider'; \nimport \"../styles/blog.css\";\nimport VideoPlayer from '../blog/VideoPlayer';\n\nexport default function Post() {\n    let location = useLocation();\n    let data = location.state.data; \n    return (\n        <div>\n            <div className=\"title\">{data.title}</div>\n            <div className=\"subtitle\">{data.date}</div>\n            <div className=\"image-container\">\n                <img src={data.image} className=\"image\"/>\n            </div>\n            <div className=\"button-link-wrap\">\n                <button className=\"button-link\" onClick={()=>window.open('https://suspicious-carson-2627ba.netlify.app/', '_blank')}>Visit App</button>\n            </div>\n            \n            <div class=\"blog-body\">\n                <p className=\"text-1\">\n                🚀  What is this app all about ?\n                </p>\n                <p className=\"text-2\">\n                    This app allows users to import a .csv file and save it in MySQL. The .csv file needs to be in a specified format, something like this . Once the data is saved we can see and delete the table data on the front-end.\n                </p>\n\n                <div className=\"para-separator\">\n                    <p class=\"text-1\">\n                    🚀  Whats there on back-end and front-end ?\n                    </p>\n                    <div className=\"list-container\">\n                        <ul>\n                            <li>\n                                <b><u>Back-End :</u></b> \n                                <ul>\n                                    <li>Node JS</li>\n                                    <li>Express JS</li>\n                                    <li>MySQL JS</li>\n                                </ul>\n                            </li>\n                            <li>\n                                <b><u>Front-End :</u></b> \n                                <ul>\n                                    <li>React JS</li>\n                                </ul>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                <Divider />\n                <div className=\"para-separator\">\n                    <p className=\"text-1\">\n                    🚀   Here is the SQL table structure :\n                    </p>\n                    <table class=\"styled-table\">\n                        <thead>\n                            <tr>\n                                <th>Feild</th>\n                                <th>Type</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>id</td>\n                                <td>int(11)</td>\n                            </tr>\n                            <tr>\n                                <td>level_col</td>\n                                <td>varchar(255)</td>\n                            </tr>\n                            <tr>\n                                <td>cvss</td>\n                                <td>varchar(255)</td>\n                            </tr>\n                            <tr>\n                                <td>title</td>\n                                <td>varchar(255)</td>\n                            </tr>\n                            <tr>\n                                <td>vulnerability</td>\n                                <td>varchar(255)</td>\n                            </tr>\n                            <tr>\n                                <td>solution</td>\n                                <td>varchar(255)</td>\n                            </tr>\n                            <tr>\n                                <td>reference_col</td>\n                                <td>varchar(255)</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n                <Divider />\n                <div className=\"para-separator\">\n                    <p className=\"text-1\">\n                    🚀  Where is it deployed ?\n                    </p>\n                    <p className=\"test-2\">\n                        Client side app ( React app ) is deployed on Netlify Server side app ( Node app ) is deployed on <a className=\"link\" href=\"https://www.heroku.com/\">Heroku</a>. \n                        MySQL database is deployed on Remote Mysql\n                    </p>\n                </div>\n                <Divider />\n                <div className=\"para-separator\">\n                    <p className=\"text-1\">\n                    🚀 How to run it locally ?\n                    </p>\n                    <p className=\"test-2\">\n                        To run it locally we need to clone two git repositories, one for the server and other for the client ( front-end).\n                        <br/>\n                        <b>To clone the client repo :</b>\n                        <br/>\n                        <CodeHighlight lineNumber={false} language=\"bash\" code={`git clone https://github.com/krishankantray/csv-to-sql-import-client.git`} />\n                        <br/>\n                        <b>To clone the server repo :</b>\n                        <br/>\n                        <CodeHighlight lineNumber={false} language=\"bash\" code={`git clone https://github.com/krishankantray/csv-to-sql-import-server.git`} />\n                        <br/>\n                        The above git setup is for online server auto deployment on Heroku and Netlify . We need to make some changes in it to run it locally.\n                        <br/><br/>\n                        <b>First we setup the server locally :</b>\n                        <div className=\"list-container\">\n                            <ul>\n                                <li>Open the directory : <span className=\"highlighted-text\">csv-to-sql-import-server</span> , in any vscode or any other editor.</li>\n                                <li>If you have a local MySql db then do replace the details in the <span className=\"highlighted-text\">app>>config>>db.config.js</span> If you don't have a local MySql db then leave it as it is.</li>\n                            </ul>\n                        </div>\n                        Now, open terminal ( in the directory : csv-to-sql-import-server ) :\n                        <br/>\n                        <span className=\"highlighted-text\">npm install</span> <span className=\"highlighted-text\">npm start</span> It should print in terminal : Server is running on port 9000.\n                        <br/><br/>\n                        <Alert severity=\"info\">\n                            <AlertTitle>Note</AlertTitle>\n                            ( Make sure there is nothing previously running on port 9000, if there is then change the >port from line 25 of server.js )\n                        </Alert>\n                    </p>\n                </div>\n                <Divider />\n                <div className=\"para-separator\">\n                    <p className=\"text-1\">\n                    🚀 To test if all APIs are working, open postman and use following APIs\n                    </p>\n                    <div className=\"list-container\">\n                        <ul>\n                        <li>GET call for obtaining all the records, url should be : <span className=\"highlighted-text\"> http://localhost:9000/customers/. </span> </li>\n\n                        <li>GET call for single records by id, for eg :<span className=\"highlighted-text\">  http://localhost:9000/customers/963 </span></li>\n\n                        <li>POST call for bulk create records :<span className=\"highlighted-text\"> http://localhost:9000/bulkcreate This call needs a body to be passed </span></li>\n\n                        <li>POST call for single create records <span className=\"highlighted-text\"> http://localhost:9000/customers This call needs a body to be passed </span></li>\n\n                        <li>DELETE call for all records deletion <span className=\"highlighted-text\"> http://localhost:9000/customers </span></li>\n\n                        <li>DELETE call for records deletion <span className=\"highlighted-text\"> http://localhost:9000/customers/963 </span></li>\n\n                        <li>PUT call to update a single record <span className=\"highlighted-text\"> http://localhost:9000/customers/963 </span></li>\n                        </ul>\n                    </div>\n                    <br />\n                    <b>Now, we will configure the local front-end ( React app ) :</b> <br/>\n                    We only need to make some changes in App.js within src directory. Just change the line 35 , 69 and 97, i.e we need to change the URL of all the fetch calls from Apps.js.\n                    <Alert severity=\"info\" icon={false}>\n                        <AlertTitle>For Example: </AlertTitle>\n                        35 : Before https://csv-to-sql-import.herokuapp.com/bulkcreate <br/>\n                        35 : After http:localhost:9000/bulkcreate\n                    </Alert>\n                    <br/>\n                    Similarly for line 69 and 97 , just replace this part of URL - <a className=\"link\" href=\"https://csv-to-sql-import.herokuapp.com\">https://csv-to-sql-import.herokuapp.com</a> with http:localhost:9000\n                    <br/>\n                    and rest of the part of url remains same.\n                    <br/> \n                    <table class=\"styled-table\">\n                        <thead>\n                            <tr>\n                                <th>GitHub Links</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>Font-End : <a className=\"link\" href=\"https://github.com/krishankantray/csv-to-sql-import-client\">https://github.com/krishankantray/csv-to-sql-import-client</a> </td>\n                            </tr>\n                            <tr>\n                                <td>Back-End : <a className=\"link\" href=\"https://github.com/krishankantray/csv-to-sql-import-server\">https://github.com/krishankantray/csv-to-sql-import-server</a> </td>\n                            </tr>\n                        </tbody>\n                    </table>           \n                    <b>See below video in case of any confusion : </b>\n                    <br/>\n                    <VideoPlayer url=\"https://youtu.be/Ktia6m4JooE\"/> \n                </div>\n            </div>\n        </div>\n    )\n}"],"sourceRoot":""}